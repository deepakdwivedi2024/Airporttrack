[Route("api/[controller]")]
[ApiController]
public class AirportController : ControllerBase
{
    private readonly IAirportRepository _repository;

    public AirportController(IAirportRepository repository)
    {
        _repository = repository;
    }

    [HttpGet]
    public async Task<ActionResult<IEnumerable<Airport>>> Get()
    {
        var airports = await _repository.GetAllAsync();
        return Ok(airports);
    }

    [HttpGet("aggregate")]
    public async Task<ActionResult<IEnumerable<BsonDocument>>> Aggregate()
    {
        var pipeline = new[]
        {
            BsonDocument.Parse("{$match: { Country: 'Papua New Guinea' } }"),
            BsonDocument.Parse("{$group: { _id: '$City', count: { $sum: 1 } } }")
        };

        var result = await _repository.AggregateAsync(pipeline);
        return Ok(result);
    }

    // Implement other CRUD endpoints
}
